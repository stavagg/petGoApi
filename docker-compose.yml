services:
  api:
    build: .
    container_name: petgoapi_server
    ports:
      - "8080:8080"
    environment:
      - PORT=:8080
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASS=password
      - DB_NAME=mydb
      - DB_PORT=5432
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - petgoapi_network

  db:
    image: postgres:15-alpine
    container_name: petgoapi_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - petgoapi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  petgoapi_network:
    driver: bridge
